# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

includes:
  asdf:
    taskfile: ./asdf.yml
    dir: ../
    internal: true

  bat:
    taskfile: ./bat.yml
    internal: true

  brew:
    taskfile: ./brew.yml
    dir: ../
    internal: true

  completions:
    taskfile: ./completions.yml
    internal: true

  gh:
    taskfile: ./github.yml
    internal: true

  node:
    taskfile: ./node.yml
    dir: ../
    internal: true

  python:
    taskfile: ./python.yml
    internal: true

  rust:
    taskfile: ./rust.yml
    dir: ../
    internal: true

  tmux:
    taskfile: ./tmux.yml
    dir: ../
    internal: true

  zinit:
    taskfile: ./zinit.yml
    dir: ../
    internal: true

tasks:
  install:
    desc: Install dotfiles
    summary: |
      Install dotfiles

      Installs all dependencies and symlink dotfiles.

      Idempotent, can be used to update packages.
    silent: true
    cmds:
      - task: create:dirs
      - task: symlink
      - task: zinit:install
      - task: asdf:install
      - task: asdf:plugins:install
      - task: asdf:tools:install
      - cmd: ./setup.sh
      - task: node:pnpm:install
      - task: brew:sync
      - task: bat:sync
      - task: python:tools:install
      - task: rust:tools:install
      - task: tmux:plugins:install
      - task: gh:plugins:install

  sync:
    desc: Synchronize dotfiles
    summary: |
      Synchronize dotfiles

      Use this task to get the latest tool versions and configuration changes

    # deps run in parallel! (if you're running into issues with one of the tasks
    # you can try running task dot:sync --concurrency 1 or manually copy the
    # tasks in deps to cmds)
    deps:
      - task: create:dirs
      - task: symlink
      - task: asdf:sync
      - task: node:sync
      - task: brew:sync
      - task: bat:sync
      - task: python:sync
      - task: rust:sync
      - task: tmux:sync
      - task: completions:sync
      - task: zinit:sync
      - task: gh:sync
    cmds:
      - ruby ./installer.rb --sync --force

  create:dirs:
    desc: Creates directories for dotfiles
    vars:
      DIRS:
        - '~/.cache/zsh/completions'
        - '~/.config'
        - '~/.local/share/psql'
    cmds:
      - cmd: mkdir -p {{.DIRS | join " "}}
        # we don't care about failures if they already exist
        ignore_error: true

  symlink:
    desc: Symlinks dotfiles and folders
    vars:
      FILES:
        # ideally this list should be as small as possible, use XDG_CONFIG
        # folder instead
        - aliases
        - asdfrc
        - ctags
        - gemrc
        - gitconfig
        - gitignore
        - gitmessage
        - ignore
        - prettierrc
        - pryrc
        - psqlrc
        - stylelintrc
        - zinitrc
        - zshenv
        - zshrc
    cmds:
      - for:
          var: FILES
          as: FILE
        cmd: |
          ln -s -f "$(realpath ./{{.FILE}})" ~/.{{.FILE}}

      - cmd: |
          for folder in ./config/*; do
            echo "Symlinking $(basename $folder)..."
            source_path=$(realpath $folder)
            pushd ~/.config > /dev/null 2>&1
            ln -s -f "$source_path" . > /dev/null 2>&1
            popd > /dev/null 2>&1
          done
        silent: true
