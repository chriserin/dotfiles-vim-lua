# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: 3

vars:
  ASDF_PLUGINS:
    - bat
    - direnv
    - elixir
    - erlang
    - fd
    - fzf
    - github-cli
    - golang
    - lazygit
    - lua
    - lua-language-server
    - neovim
    - nodejs
    - python
    - rebar
    - ripgrep
    - ruby
    - rust
    - tmux

  # some tools cannot be installed via asdf on ARM, but are still useful for
  # x86 machines and linux
  ARM_INCOMPATIBLE_PLUGINS:
    - github-cli
    - fzf
    - fd
    - ripgrep
    - neovim

  # remove incompatible plugins from full plugin list
  ARM_COMPATIBLE_PLUGINS:
    sh: echo {{range $plugin := .ASDF_PLUGINS}}{{if not (has $plugin $.ARM_INCOMPATIBLE_PLUGINS)}}{{$plugin}} {{end}}{{end}}

  NODE_LTS_PREFIX: '22'

  PYTHON_LTS_PREFIX: '3.12'

tasks:
  install:
    desc: Installs asdf itself
    cmds:
      - cmd: |
          rm -rf ~/.asdf && \
          git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.1
        platforms: [linux]

      - cmd: brew install asdf
        platforms: [darwin]

  plugins:install:
    desc: Installs all asdf plugins
    cmds:
      - platforms: [amd64]
        for:
          var: ASDF_PLUGINS
          as: PLUGIN
        cmd: asdf plugin add {{.PLUGIN}}

      - platforms: [arm64]
        for:
          var: ARM_COMPATIBLE_PLUGINS
          as: PLUGIN
          split: ' '
        cmd: asdf plugin add {{.PLUGIN}}

  plugins:update:
    desc: Updates all asdf plugins
    cmd: asdf plugin-update --all

  update:
    desc: Updates asdf itself
    cmd: asdf update

  sync:
    desc: Updates asdf plugins, asdf itself and installs packages for this project
    cmds:
      - task: plugins:install
      - task: plugins:update
      - task: update
      - asdf install

  tool:install:
    requires:
      vars: [PLUGIN]
    silent: true
    cmd: |
      {{if eq .PLUGIN "nodejs" }}
        version='latest:{{.NODE_LTS_PREFIX}}'
      {{else if eq .PLUGIN "python"}}
        version='latest:{{.PYTHON_LTS_PREFIX}}'
      {{else}}
        version='latest'
      {{end}}
      echo
      asdf install {{.PLUGIN}} "$version"
      echo -n "Setting {{.PLUGIN}} $version as global.."
      asdf global {{.PLUGIN}} "$version"
      echo "DONE"

  tools:install:
    desc: Installs/updates all asdf based tools
    cmds:
      - platforms: [amd64]
        for:
          var: ASDF_PLUGINS
          as: PLUGIN
        cmd: task asdf:tool:install PLUGIN={{.PLUGIN}}

      - platforms: [arm64]
        for:
          var: ARM_COMPATIBLE_PLUGINS
          as: PLUGIN
          split: ' '
        task: tool:install
        vars: { PLUGIN: '{{.PLUGIN}}' }
