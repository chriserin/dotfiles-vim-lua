# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:
  commit:brew-packages:
    desc: Commits the Brewfile.lock.json file if changed
    silent: true
    cmd: |
      ./scripts/commit_changed_file.sh \
          'Brewfile.lock.json' \
          'chore(brew): update packages'

  commit:nvim-plugins:
    desc: Commits the lazy-lock.json file if changed
    silent: true
    cmd: |
      ./scripts/commit_changed_file.sh \
          './config/nvim/lazy-lock.json' \
          'chore(nvim): update plugins'

  format:lua:check:
    desc: Runs a Lua format check using stylua
    silent: true
    cmd: stylua --allow-hidden --respect-ignores --check .

  format:lua:
    desc: Runs a Lua format using stylua
    silent: true
    cmd: stylua --allow-hidden --respect-ignores .

  gh:automerge:renovate:
    desc: Auto merges all PRs
    summary: |
      Auto merges all PRs

      Does the following:
      - sets PRs to auto merge
      - uses squash to merge
      - automatically delete the branch after merge
    silent: true
    cmd: |
      gh pr list --state open --author 'app/renovate' | awk '{ print $1 }' | xargs -I{} gh pr merge {} --auto --squash --delete-branch

  gh:release:
    desc: Merges the release PR
    summary: |
      Merges the release PR which:
      - bumps the version
      - updates the changelog
      - creates a github release
    silent: true
    cmd: |
      gh pr list --author "@me" --state open --search 'chore(master): release' | awk '{ print $1 }' | xargs -I{} gh pr merge {} --auto --squash --delete-branch

  install:dotfiles:
    desc: Install dotfiles
    summary: |
      Install dotfiles

      Installs all dependencies and symlink dotfiles.

      Idempotent, can be used to update packages.
    silent: true
    cmd: ./setup.sh

  install:ollama:
    desc: Installs Ollama and pulls useful models
    summary: |
      Works only on macOS for now.

      Installs the following models:
      - llama3.1
      - mistral
      - codellama
    cmds:
      - brew install --cask ollama
      - ollama pull llama3.1
      - ollama pull codellama
      - ollama pull mistral

  install:pnpm:
    desc: Sets up PNPM on the local machine
    summary: |
      Enables and activates pnpm in the current project

      Requires Node.js to be properly set up
    cmds:
      - corepack enable
      - corepack enable pnpm
      - asdf reshim nodejs
      - pnpm --version

  install:sudo-touch-id:
    desc: Sets up touch id as sufficient sudo permission
    summary: Sets up touch id as sufficient sudo permission

      This survives OS updates after macOS Sonoma.

      Requires sudo.
    cmds:
      - sed 's/^#auth/auth/' /etc/pam.d/sudo_local.template > /etc/pam.d/sudo_local

  lint:yaml:
    desc: Runs yamllint on this repo
    cmds:
      - yamllint --strict --config-file ./config/yamllint/config .

  sync:asdf:
    desc: Updates asdf plugins and installs asdf packages for this project
    cmds:
      - asdf plugin-update --all
      - asdf install

  sync:dotfiles:
    desc: Synchronize dotfiles
    summary: |
      Synchronize dotfiles

      Only symlinks dotfiles, does not install packages
    cmds:
      # we need to sync asdf for the local project before we try to install any packages
      - task: sync:asdf
      - task: install:pnpm
      - task: sync:brew
      - task: tmux:plugins:clean
      - task: tmux:plugins:install
      - task: tmux:plugins:update
      - ruby ./installer.rb --sync --force

  sync:nvim:
    desc: Syncs/updates Neovim plugins, CLI utils, and TreeSitter plugins
    summary: |
      Updates Neovim plugins, CLI utils, and TreeSitter plugins

      Then automatically commits the changes to the lazy-lock file, if there are any.
    cmds:
      - ./scripts/nvim-update.sh
      - task: commit:nvim-plugins

  sync:brew:
    desc: Synchronize homebrew packages
    summary: |
      Updates Homebrew packages

      Then automatically commits the changes to the Brewfile.lock.json file, if there are any.
    platforms: ['darwin']
    cmds:
      - brew bundle
      - task: commit:brew-packages

  tmux:reload:
    desc: Reload Tmux Configuration
    cmds:
      - cmd: tmux source-file ~/.config/tmux/tmux.conf
        silent: true
      - cmd: tmux display-message 'tmux.conf reloaded'
        silent: true
      - cmd: echo "Tmux Config Reloaded!"
        silent: true

  tmux:plugins:install:
    desc: Install Tmux Plugins
    cmds:
      - task: tmux:reload
      - cmd: ./config/tmux/plugins/tpm/bin/install_plugins
        silent: true
      - task: tmux:reload

  tmux:plugins:update:
    desc: Update Tmux Plugins
    cmds:
      - task: tmux:reload
      - cmd: ./config/tmux/plugins/tpm/bin/update_plugins all
        silent: true

  tmux:plugins:clean:
    desc: Clean Tmux Plugins
    cmds:
      - task: tmux:reload
      - cmd: ./config/tmux/plugins/tpm/bin/clean_plugins
        silent: true
